version: '3.8'

networks:
  app_network:
    driver: bridge

services:
  nginx:
    restart: unless-stopped
    image: nginx
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - app_network
    
  backend:
    build: .
    restart: always
    command: uvicorn app.web.main:app --host 0.0.0.0 --port 8000
    env_file:
      - .env
    # depends_on:
    #   - db
    expose:
      - "8000"
    networks:
      - app_network

  # db:
  #   image: postgres:14
  #   container_name: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_DB: ${DB_NAME}
  #     POSTGRES_USER: ${DB_USER}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app_network
  #   env_file:
  #     - .env
  #   healthcheck:
  #     test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5


  # redis:
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - app_network

# volumes:
  # postgres_data:
  # redis_data: